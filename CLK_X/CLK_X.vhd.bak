library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity CLK_X is
	port (
		clk, rst, start: in std_logic;
		clk_d : out std_logic;
		
	);
end CLK_X;

architecture ARC of CLK_X is

constant _max_count: INTEGER := 250;
signal count: INTEGER range 0 to max_count;
signal clk_d: std_logic := '0';

begin	
gen_clock: process(clk, clk_d, count)
	begin
		if rst = '1' then
			count <= 0;
			clk_d <= 0;
		if clk'event and clk='1' and start = '1' then
			if count < max_count then 
				count <= count+1;
			else
				clk_d <= not clk_d;
				count <= 0;
			end if;
		end if;
end process;

end ARC;